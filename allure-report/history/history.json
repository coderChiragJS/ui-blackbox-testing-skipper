{"8a4eca0078f0af46d74b51203a83d17e":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":1},"items":[{"uid":"a7ce96ba6ca67960","status":"passed","time":{"start":1756361213054,"stop":1756361214906,"duration":1852}}]},"bbf656037b371e049b27768332d31ba4":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"d22d1192ee7e1aab","status":"broken","statusDetails":"waitUntil condition failed with the following reason: WebDriverError: Method is not implemented when running \"execute/sync\" with method \"POST\" and args \"function isElementClickable(elem) {\n  if (!elem.getBoundingClientRect || !elem.scrollIntoView || !elem.contains || !elem.getClientRects || !document.elementFromPoint) {\n    return false;\n  }\n  const isOldEdge = !!window.StyleMedia;\n  const scrollIntoViewFullSupport = !(window.safari || isOldEdge);\n  function getOverlappingElement(elem2, context) {\n    context = context || document;\n    const elemDimension = elem2.getBoundingClientRect();\n    const x = elemDimension.left + elem2.clientWidth / 2;\n    const y = elemDimension.top + elem2.clientHeight / 2;\n    return context.elementFromPoint(x, y);\n  }\n  function getOverlappingRects(elem2, context) {\n    context = context || document;\n    const rects = elem2.getClientRects();\n    const rect = rects[0];\n    const x = rect.left + rect.width / 2;\n    const y = rect.top + rect.height / 2;\n    return [context.elementFromPoint(x, y)];\n  }\n  function getOverlappingElements(elem2, context) {\n    return [getOverlappingElement(elem2, context)].concat(getOverlappingRects(elem2, context));\n  }\n  function nodeContains(elem2, otherNode) {\n    if (isOldEdge) {\n      let tmpElement = otherNode;\n      while (tmpElement) {\n        if (tmpElement === elem2) {\n          return true;\n        }\n        tmpElement = tmpElement.parentNode;\n        if (tmpElement && tmpElement.nodeType === 11 && tmpElement.host) {\n          tmpElement = tmpElement.host;\n        }\n      }\n      return false;\n    }\n    return elem2.contains(otherNode);\n  }\n  function isOverlappingElementMatch(elementsFromPoint, elem2) {\n    if (elementsFromPoint.some(function(elementFromPoint) {\n      return elementFromPoint === elem2 || nodeContains(elem2, elementFromPoint);\n    })) {\n      return true;\n    }\n    let elemsWithShadowRoot = [].concat(elementsFromPoint);\n    elemsWithShadowRoot = elemsWithShadowRoot.filter(function(x) {\n      return x && x.shadowRoot && x.shadowRoot.elementFromPoint;\n    });\n    let shadowElementsFromPoint = [];\n    for (let i = 0; i < elemsWithShadowRoot.length; ++i) {\n      const shadowElement = elemsWithShadowRoot[i];\n      shadowElementsFromPoint = shadowElementsFromPoint.concat(\n        getOverlappingElements(elem2, shadowElement.shadowRoot)\n      );\n    }\n    shadowElementsFromPoint = [].concat(shadowElementsFromPoint);\n    shadowElementsFromPoint = shadowElementsFromPoint.filter(function(x) {\n      return !elementsFromPoint.includes(x);\n    });\n    if (shadowElementsFromPoint.length === 0) {\n      return false;\n    }\n    return isOverlappingElementMatch(shadowElementsFromPoint, elem2);\n  }\n  function isElementInViewport(elem2) {\n    if (!elem2.getBoundingClientRect) {\n      return false;\n    }\n    const rect = elem2.getBoundingClientRect();\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n    const vertInView = rect.top <= windowHeight && rect.top + rect.height > 0;\n    const horInView = rect.left <= windowWidth && rect.left + rect.width > 0;\n    return vertInView && horInView;\n  }\n  function isEnabled(elem2) {\n    return elem2.disabled !== true;\n  }\n  function hasOverlaps(elem2) {\n    return !isOverlappingElementMatch(getOverlappingElements(elem2), elem2);\n  }\n  function isFullyDisplayedInViewport(elem2) {\n    return isElementInViewport(elem2) && !hasOverlaps(elem2);\n  }\n  function getViewportScrollPositions() {\n    return {\n      // Cross-browser compatibility\n      x: window.scrollX !== null && window.scrollX !== void 0 ? window.scrollX : window.pageXOffset,\n      y: window.scrollY !== null && window.scrollY !== void 0 ? window.scrollY : window.pageYOffset\n    };\n  }\n  let _isFullyDisplayedInViewport = isFullyDisplayedInViewport(elem);\n  if (!_isFullyDisplayedInViewport) {\n    const { x: originalX, y: originalY } = getViewportScrollPositions();\n    elem.scrollIntoView(scrollIntoViewFullSupport ? { block: \"center\", inline: \"center\" } : false);\n    _isFullyDisplayedInViewport = isFullyDisplayedInViewport(elem);\n    const { x: currentX, y: currentY } = getViewportScrollPositions();\n    if (currentX !== originalX || currentY !== originalY) {\n      window.scroll(originalX, originalY);\n    }\n  }\n  return _isFullyDisplayedInViewport && isEnabled(elem);\n}\"","time":{"start":1756361247934,"stop":1756361265049,"duration":17115}}]},"bc2c0d1e1365289491ca4df215572dcb":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"5a14e5e65d27f7ec","status":"broken","statusDetails":"done() called multiple times in test <Login Regression Tests should validate empty form submission> of file /Users/chiragtankwal/projects/ui-test-blackbox/test/specs/regression/login.regression.test.js; in addition, done() received error: Error: write EPIPE\n    at afterWriteDispatched (node:internal/stream_base_commons:161:15)\n    at writeGeneric (node:internal/stream_base_commons:152:3)\n    at Socket._writeGeneric (node:net:958:11)\n    at Socket._write (node:net:970:8)\n    at writeOrBuffer (node:internal/streams/writable:572:12)\n    at _write (node:internal/streams/writable:501:10)\n    at Writable.write (node:internal/streams/writable:510:10)\n    at console.value (node:internal/console/constructor:303:16)\n    at console.log (node:internal/console/constructor:378:26)\n    at file:///Users/chiragtankwal/projects/ui-test-blackbox/node_modules/@wdio/logger/build/index.js:145:7 {\n  errno: -32,\n  code: 'EPIPE',\n  syscall: 'write',\n  uncaught: true\n}","time":{"start":1756360814553,"stop":1756360814553,"duration":0}}]},"7a8695265d68bf2b83b53185509aa3f3":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"28c1976a3392d704","status":"broken","statusDetails":"write EPIPE","time":{"start":1756360797048,"stop":1756360814545,"duration":17497}}]},"09da0b6cbc1f90e1899ad00081679e2d":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"f5e4daa6e94b27e6","status":"broken","statusDetails":"write EPIPE","time":{"start":1756360814572,"stop":1756360814573,"duration":1}}]},"7a2c4b22993c4207d70ac5d36d0d0843":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"c00148357dc1e933","status":"broken","statusDetails":"done() called multiple times in test <Login Regression Tests should toggle password visibility> of file /Users/chiragtankwal/projects/ui-test-blackbox/test/specs/regression/login.regression.test.js; in addition, done() received error: Error: write EPIPE\n    at afterWriteDispatched (node:internal/stream_base_commons:161:15)\n    at writeGeneric (node:internal/stream_base_commons:152:3)\n    at Socket._writeGeneric (node:net:958:11)\n    at Socket._write (node:net:970:8)\n    at writeOrBuffer (node:internal/streams/writable:572:12)\n    at _write (node:internal/streams/writable:501:10)\n    at Writable.write (node:internal/streams/writable:510:10)\n    at console.value (node:internal/console/constructor:303:16)\n    at console.log (node:internal/console/constructor:378:26)\n    at file:///Users/chiragtankwal/projects/ui-test-blackbox/node_modules/@wdio/logger/build/index.js:145:7 {\n  errno: -32,\n  code: 'EPIPE',\n  syscall: 'write',\n  uncaught: true\n}","time":{"start":1756360814559,"stop":1756360814559,"duration":0}}]},"4937f1c7626c6cec0a0399bbe330faa4":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"f0a5071b36aa2a47","status":"broken","statusDetails":"write EPIPE","time":{"start":1756360748338,"stop":1756360748342,"duration":4}}]},"71c65f7a9de88c125b48e89b25e57af0":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"ccb1aa99b51358fc","status":"broken","statusDetails":"write EPIPE","time":{"start":1756359458060,"stop":1756359458063,"duration":3}}]},"3bccea51a3051d617b7b03397acfb63e":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":1},"items":[{"uid":"a29c43066db24c6","status":"broken","statusDetails":"write EPIPE","time":{"start":1756360814565,"stop":1756360814565,"duration":0}}]}}